{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanka\\\\OneDrive\\\\Desktop\\\\IdeaAI\\\\client\\\\src\\\\context\\\\TaskContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport taskReducer from '../reducers/taskReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext();\nconst initialState = {\n  tasks: [],\n  currentTask: null,\n  loading: true,\n  error: null\n};\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(taskReducer, initialState);\n  const getTasks = async () => {\n    try {\n      const res = await axios.get('/api/tasks');\n      dispatch({\n        type: 'GET_TASKS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n    }\n  };\n  const getTask = async id => {\n    try {\n      const res = await axios.get(`/api/tasks/${id}`);\n      dispatch({\n        type: 'GET_TASK',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n    }\n  };\n  const createTask = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/tasks', formData, config);\n      dispatch({\n        type: 'CREATE_TASK',\n        payload: res.data.data\n      });\n      return res.data.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n      throw err;\n    }\n  };\n  const updateTask = async (id, formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.put(`/api/tasks/${id}`, formData, config);\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: res.data.data\n      });\n      return res.data.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n      throw err;\n    }\n  };\n  const updateTaskStatus = async (id, status) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.put(`/api/tasks/${id}/status`, {\n        status\n      }, config);\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: res.data.data\n      });\n      return res.data.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n      throw err;\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`/api/tasks/${id}`);\n      dispatch({\n        type: 'DELETE_TASK',\n        payload: id\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error deleting task'\n      });\n      throw err;\n    }\n  };\n  const clearCurrentTask = () => {\n    dispatch({\n      type: 'CLEAR_CURRENT_TASK'\n    });\n  };\n  const clearErrors = () => {\n    dispatch({\n      type: 'CLEAR_ERRORS'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      currentTask: state.currentTask,\n      loading: state.loading,\n      error: state.error,\n      getTasks,\n      getTask,\n      createTask,\n      updateTask,\n      updateTaskStatus,\n      deleteTask,\n      clearCurrentTask,\n      clearErrors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useReducer","axios","taskReducer","jsxDEV","_jsxDEV","TaskContext","initialState","tasks","currentTask","loading","error","TaskProvider","children","_s","state","dispatch","getTasks","res","get","type","payload","data","err","response","message","getTask","id","createTask","formData","config","headers","post","updateTask","put","updateTaskStatus","status","deleteTask","delete","_err$response","_err$response$data","clearCurrentTask","clearErrors","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sanka/OneDrive/Desktop/IdeaAI/client/src/context/TaskContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport taskReducer from '../reducers/taskReducer';\n\n\nexport const TaskContext = createContext();\n\nconst initialState = {\n  tasks: [],\n  currentTask: null,\n  loading: true,\n  error: null\n};\n\nexport const TaskProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(taskReducer, initialState);\n\n  const getTasks = async () => {\n    try {\n      const res = await axios.get('/api/tasks');\n\n      dispatch({\n        type: 'GET_TASKS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n    }\n  };\n\n  const getTask = async (id) => {\n    try {\n      const res = await axios.get(`/api/tasks/${id}`);\n\n      dispatch({\n        type: 'GET_TASK',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n    }\n  };\n\n  const createTask = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/tasks', formData, config);\n\n      dispatch({\n        type: 'CREATE_TASK',\n        payload: res.data.data\n      });\n\n      return res.data.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n      throw err;\n    }\n  };\n  const updateTask = async (id, formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/tasks/${id}`, formData, config);\n\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: res.data.data\n      });\n\n      return res.data.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n      throw err;\n    }\n  };\n\n  const updateTaskStatus = async (id, status) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/tasks/${id}/status`, { status }, config);\n\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: res.data.data\n      });\n\n      return res.data.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.message\n      });\n      throw err;\n    }\n  };\n\n  const deleteTask = async (id) => {\n    try {\n      await axios.delete(`/api/tasks/${id}`);\n\n      dispatch({\n        type: 'DELETE_TASK',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response?.data?.message || 'Error deleting task'\n      });\n      throw err;\n    }\n  };\n\n  const clearCurrentTask = () => {\n    dispatch({ type: 'CLEAR_CURRENT_TASK' });\n  };\n\n  const clearErrors = () => {\n    dispatch({ type: 'CLEAR_ERRORS' });\n  };\n\n  return (\n    <TaskContext.Provider\n      value={{\n        tasks: state.tasks,\n        currentTask: state.currentTask,\n        loading: state.loading,\n        error: state.error,\n        getTasks,\n        getTask,\n        createTask,\n        updateTask,\n        updateTaskStatus,\n        deleteTask,\n        clearCurrentTask,\n        clearErrors\n      }}\n    >\n      {children}\n    </TaskContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}